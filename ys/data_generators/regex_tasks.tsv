Match a U.S. phone number (XXX-XXX-XXXX)    import re; re.match(r'\d{3}-\d{3}-\d{4}', '123-456-7890')
Match a U.S. zip code (5 or 9 digits)   import re; re.match(r'\d{5}(-\d{4})?', '12345-6789')
Match a date in YYYY-MM-DD format   import re; re.match(r'\d{4}-\d{2}-\d{2}', '2024-09-01')
Match a floating-point number   import re; re.match(r'^\d+\.\d+$', '123.456')
Match a hex color code  import re; re.match(r'#[0-9a-fA-F]{6}', '#a3c113')
Match a password with at least 8 characters, 1 digit, 1 uppercase, 1 lowercase  import re; re.match(r'^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).{8,}$', 'Passw0rd')
Match a string containing both letters and digits   import re; re.match(r'^[a-zA-Z0-9]+$', 'abc123')
Match a string containing only digits   import re; re.match(r'^\d+$', '123456')
Match a string containing only letters  import re; re.match(r'^[a-zA-Z]+$', 'abcDEF')
Match a string that contains "apple" followed by "pie"  import re; re.search(r'apple.*pie', 'apple and pie')
Match a string that contains "cat" or "dog" import re; re.search(r'cat|dog', 'I have a cat')
Match a string that contains a date in YYYY/MM/DD format    import re; re.match(r'^\d{4}/\d{2}/\d{2}$', '2024/09/01')
Match a string that contains a number greater than 100  import re; re.match(r'^(1\d{2,}|[2-9]\d{2,}|\d{4,})$', '150')
Match a string that contains a number with exactly two decimal places   import re; re.match(r'^\d+\.\d{2}$', '123.45')
Match a string that contains a repeated word    import re; re.search(r'\b(\w+)\s+\1\b', 'word word')
Match a string that contains a specific character repeated multiple times   import re; re.match(r'^[a]{5}$', 'aaaaa')
Match a string that contains a specific number of digits    import re; re.match(r'^\d{6}$', '123456')
Match a string that contains a specific pattern repeated exactly n times    import re; re.match(r'^(abc){3}$', 'abcabcabc')
Match a string that contains a specific word at the beginning   import re; re.match(r'^Word\b', 'Word of the day')
Match a string that contains a specific word at the end import re; re.match(r'.*\bWord$', 'End with Word')
Match a string that contains a valid 12-hour time format with AM/PM import re; re.match(r'^(0[1-9]|1[0-2]):[0-5]\d (AM|PM)$', '10:30 AM')
Match a string that contains a valid 24-hour time format    import re; re.match(r'^(?:[01]\d|2[0-3]):[0-5]\d$', '23:45')
Match a string that contains a valid 3-letter ISO country code  import re; re.match(r'^[A-Z]{3}$', 'USA')
Match a string that contains a valid 4-digit PIN    import re; re.match(r'^\d{4}$', '1234')
Match a string that contains a valid CVC code (3 digits)    import re; re.match(r'^\d{3}$', '123')
Match a string that contains a valid CVV (3 or 4 digits)    import re; re.match(r'^\d{3,4}$', '123')
Match a string that contains a valid HTML hex color code    import re; re.match(r'^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$', '#ABC123')
Match a string that contains a valid HTML tag with attributes   import re; re.match(r'^<([a-z]+)([^<]+)*(?:>(.*)<\/\1>|\s+\/>)$', '<img src="image.jpg" />')
Match a string that contains a valid ISBN   import re; re.match(r'^(\d{9}[\dXx]|\d{13})$', '123456789X')
Match a string that contains a valid Roman numeral  import re; re.match(r'^(M{0,4})(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$', 'MMXXIV')
Match a string that contains a valid UUID   import re; re.match(r'^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$', '123e4567-e89b-12d3-a456-426614174000')
Match a string that contains a valid binary number  import re; re.match(r'^[01]+$', '1101')
Match a string that contains a valid date in DD/MM/YYYY format  import re; re.match(r'^\d{2}/\d{2}/\d{4}$', '01/09/2024')
Match a string that contains a valid date in MM/DD/YYYY format  import re; re.match(r'^\d{2}/\d{2}/\d{4}$', '09/01/2024')
Match a string that contains a valid email address with a specific domain   import re; re.match(r'^[\w\.-]+@example\.com$', 'user@example.com')
Match a string that contains a valid file extension import re; re.match(r'^.+\.(jpg|jpeg|png|gif)$', 'image.jpg')
Match a string that contains a valid floating-point number (including optional +, -, .) import re; re.match(r'^[-+]?\d*\.\d+$', '123.45')
Match a string that contains a valid floating-point number with a sign  import re; re.match(r'^[+-]?\d+\.\d+$', '-123.45')
Match a string that contains a valid fraction   import re; re.match(r'^\d+/\d+$', '1/2')
Match a string that contains a valid hex digit  import re; re.match(r'^[0-9A-Fa-f]+$', '1A3F')
Match a string that contains a valid hexadecimal color code import re; re.match(r'^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$', '#fff')
Match a string that contains a valid hexadecimal number import re; re.match(r'^[0-9a-fA-F]+$', '1A3F')
Match a string that contains a valid hexadecimal string import re; re.match(r'^[A-Fa-f0-9]+$', '1A3F')
Match a string that contains a valid octal number   import re; re.match(r'^[0-7]+$', '1234567')
Match a string that contains a valid percentage (0-100%)    import re; re.match(r'^(100|[1-9]?[0-9])%$', '99%')
Match a string that contains a valid phone number with country code import re; re.match(r'^\+\d{1,3}\s\d{10}$', '+1 1234567890')
Match a string that contains a valid simple mathematical expression import re; re.match(r'^\d+[\+\-\*\/]\d+$', '3+5')
Match a string that contains a valid social security number (XXX-XX-XXXX)   import re; re.match(r'\d{3}-\d{2}-\d{4}', '123-45-6789')
Match a string that contains a valid time in HH:MM format   import re; re.match(r'^\d{2}:\d{2}:\d{2}$', '14:30:59')
Match a string that contains a valid variable name (letters, digits, underscores)   import re; re.match(r'^[a-zA-Z_]\w*$', 'variable_name')
Match a string that contains a valid vehicle license plate number   import re; re.match(r'^[A-Z0-9]{1,7}$', 'ABC1234')
Match a string that contains a word that starts with a capital letter   import re; re.search(r'\b[A-Z][a-z]*\b', 'Hello World')
Match a string that contains any non-word character import re; re.search(r'\W', 'hello@world')
Match a string that contains any whitespace character   import re; re.search(r'\s', 'Hello World')
Match a string that contains any word longer than 10 characters import re; re.search(r'\b\w{11,}\b', 'supercalifragilistic')
Match a string that contains at least one digit import re; re.search(r'\d', 'abc123')
Match a string that contains at least one lowercase letter  import re; re.search(r'[a-z]', 'Hello')
Match a string that contains at least one special character import re; re.search(r'[^a-zA-Z0-9]', 'hello@world')
Match a string that contains at least one uppercase and one lowercase letter    import re; re.match(r'^(?=.*[a-z])(?=.*[A-Z]).+$', 'HelloWorld')
Match a string that contains at least one uppercase letter  import re; re.search(r'[A-Z]', 'Hello')
Match a string that contains at least one vowel import re; re.search(r'[aeiouAEIOU]', 'hello')
Match a string that contains exactly 3 letters  import re; re.match(r'^[a-zA-Z]{3}$', 'abc')
Match a string that contains no consonants  import re; re.match(r'^[aeiouAEIOU]+$', 'aeiou')
Match a string that contains no digits  import re; re.match(r'^\D+$', 'abcdef')
Match a string that contains no spaces  import re; re.match(r'^\S+$', 'NoSpacesHere')
Match a string that contains no special characters  import re; re.match(r'^[a-zA-Z0-9]+$', 'NoSpecialChars')
Match a string that contains no vowels  import re; re.match(r'^[^aeiouAEIOU]+$', 'bcdfg')
Match a string that contains only alphanumeric characters   import re; re.match(r'^[a-zA-Z0-9]+$', 'abc123')
Match a string that contains only lowercase letters import re; re.match(r'^[a-z]+$', 'abcdef')
Match a string that contains only printable ASCII characters    import re; re.match(r'^[\x20-\x7E]+$', 'Hello, World!')
Match a string that contains only uppercase letters import re; re.match(r'^[A-Z]+$', 'ABCDEF')
Match a string that contains only whitespace characters import re; re.match(r'^\s+$', '   ')
Match a string that contains the same word three times  import re; re.search(r'\b(\w+)\b.*\b\1\b.*\b\1\b', 'word word word')
Match a string that contains two identical consecutive words    import re; re.search(r'\b(\w+)\s+\1\b', 'word word')
Match a string that ends with "xyz" import re; re.match(r'xyz$', '123xyz')
Match a string that ends with a period  import re; re.match(r'.*\.$', 'This is a sentence.')
Match a string that is a palindrome import re; re.match(r'^(?P<word>.+)(?P=word[::-1])$', 'radar')
Match a string that is a valid ISBN-10  import re; re.match(r'^\d{9}[0-9Xx]$', '123456789X')
Match a string that is a valid ISBN-13  import re; re.match(r'^\d{13}$', '9781234567897')
Match a string that is a valid Python identifier    import re; re.match(r'^[a-zA-Z_]\w*$', '_variable')
Match a string that is a valid US dollar amount python import re; re.match(r'^\$\d+(\.\d{2})?$', '$100.00')
Match a string that is a valid file path    import re; re.match(r'^(/[^/ ]*)+/?$', '/home/user/file.txt')
Match a string that is a valid floating-point number    import re; re.match(r'^[-+]?[0-9]*\.?[0-9]+$', '3.14')
Match a string that is a valid integer  import re; re.match(r'^\d+$', '12345')
Match a string that is a valid time duration in HH:MM format    import re; re.match(r'^\d{2}:\d{2}:\d{2}$', '12:34:56')
Match a string that is exactly 10 characters long   import re; re.match(r'^.{10}$', 'abcdefghij')
Match a string that starts with "abc"   import re; re.match(r'^abc', 'abc123')
Match a string that starts with a number    import re; re.match(r'^\d', '123abc')
Match a string that starts with a specific digit    import re; re.match(r'^[5-9]', '5abc')
Match a time in HH format   import re; re.match(r'\d{2}:\d{2}', '14:30')
Match a valid HTML tag  import re; re.match(r'^<([a-z]+)([^<]+)*(?:>(.*)<\/\1>|\s+\/>)$', '<div>content</div>')
Match a valid IPv4 address  import re; re.match(r'(\d{1,3}\.){3}\d{1,3}', '192.168.1.1')
Match a valid Instagram handle  import re; re.match(r'^@(\w{1,30})$', '@username')
Match a valid MAC address   import re; re.match(r'^([0-9A-Fa-f]{2}:){5}[0-9A-Fa-f]{2}$', '01:23:45:67:89:AB')
Match a valid Twitter handle    import re; re.match(r'^@(\w{1,15})$', '@username')
Match a valid URL   import re; re.match(r'https?://[^\s/$.?#].[^\s]*', 'https://www.example.com')
Match a valid credit card number (16 digits)    import re; re.match(r'\d{4}-?\d{4}-?\d{4}-?\d{4}', '1234-5678-9876-5432')
Match a valid domain name   import re; re.match(r'^[a-zA-Z0-9-]{1,63}\.[a-zA-Z]{2,}$', 'example.com')
Match a valid email address import re; re.match(r'^[\w\.-]+@[\w\.-]+\.\w+$', 'example@example.com')
Match a word boundary   import re; re.search(r'\bword\b', 'word boundary')